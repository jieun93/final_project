<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ERP.dao.account.IStatisticsDAO">
<select id="year" resultType="int">
	SELECT TO_CHAR(LEAST(NVL(MIN(B.AMOR_DATE),SYSDATE), NVL(MIN(A.CHIT_DATE),SYSDATE),
	            NVL(MIN(C.CHIT_DATE),SYSDATE), NVL(MIN(D.CHIT_DATE),SYSDATE),
	            NVL(MIN(E.SAL_DATE),SYSDATE)),'YYYY')
	FROM CHIT A FULL OUTER JOIN AMOR_MEMORY B ON (1=0)
	            FULL OUTER JOIN BUYCHIT C ON (1=0)
	            FULL OUTER JOIN SELLCHIT D ON (1=0)
	            FULL OUTER JOIN SALARY_TRANS E ON (1=0)
</select>
<select id="prodYear" resultType="int">
	SELECT TO_CHAR(NVL(MIN(A.CHIT_DATE),SYSDATE),'YYYY')
	FROM SELLCHIT A
</select>
<select id="selectplusMinus" parameterType="StatisticsVO" resultType="StatisticsVO">
SELECT NVL(A.DIVISION,B.DIVISION) DIVISION, NVL(A.STAND_NAME,B.STAND_NAME) STANDARD_NAME,
        NVL(A.ACCOUNT_NAME,B.ACCOUNT_NAME) ACCOUNT_NAME, NVL(A.PRICE,0) STANDARD, NVL(B.PRICE,0) COMPARE
<!-- 재고자산 -->
FROM (SELECT '자산' DIVISION, '유동자산' STAND_NAME, '재고자산' ACCOUNT_NAME,
<!-- 입고 -->
(SELECT NVL(SUM(P.PRICE*(A.QTY-B.QTY-C.QTY-D.QTY)),0) 
FROM(
SELECT NVL(SUM(A.MAT_IN_QTY),0) QTY, B.MAT_NO
FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE)
WHERE A.MAT_IN_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY B.MAT_NO) A LEFT OUTER JOIN 
<!-- 생산출고 -->
(SELECT NVL(SUM(C.PDUCT_CNT*E.MAT_NUMBER),0) QTY, E.MAT_NO
FROM MAT_MF_OUT A INNER JOIN MATERIAL B ON (A.MAT_NO = B.MAT_NO)
                INNER JOIN PDUCT_LIST C ON (C.PDUCT_NO = A.PDUCT_NO)
                INNER JOIN PROD D ON (D.PROD_NO = C.PROD_NO)
                INNER JOIN BOM E ON (E.PROD_NO = D.PROD_NO)
WHERE A.MF_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY E.MAT_NO) B ON (A.MAT_NO = B.MAT_NO)
LEFT OUTER JOIN (
<!-- 폐기출고 -->
SELECT NVL(SUM(A.DIS_CNT),0) QTY, A.MAT_NO
FROM MAT_DISPOSAL A 
WHERE A.DIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY A.MAT_NO
) C ON (A.MAT_NO = C.MAT_NO)
LEFT OUTER JOIN(
SELECT NVL(SUM(B.RETMAT_QTY),0) QTY, C.MAT_NO
FROM MATERIAL_OUT A INNER JOIN BUY_RET_M B ON (A.RETMAT_NO = B.RETMAT_NO)
                    INNER JOIN MAT_SECTOR C ON (C.MAT_SECTOR_NO = A.MAT_SECTOR_NO)
WHERE A.MET_OUT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101') 
GROUP BY C.MAT_NO
) D ON (A.MAT_NO = D.MAT_NO)
LEFT OUTER JOIN(
<!-- 최근 원자재 가액 -->
SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY B.MAT_NO
) P ON (P.MAT_NO = A.MAT_NO))
PRICE
FROM DUAL
     
   UNION

<!-- 고정자산 -->
SELECT D.DIVISION, D.STAND_NAME, ACCOUNT_NAME, NVL(SUM(GETCOST-NVL(COST,0)),0) PRICE 
FROM FIXASSETS A LEFT OUTER JOIN 
(SELECT FIXASSETS_NO, NVL(SUM(AMOR_COST),0) COST 
FROM AMOR_MEMORY
WHERE AMOR_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY FIXASSETS_NO
) B ON (A.FIXASSETS_NO=B.FIXASSETS_NO)
    INNER JOIN ACCOUNT C ON (C.ACCOUNT_NO = A.ACCOUNT_NO)
    INNER JOIN STANDARD_ACC D ON (D.STAND_NO=C.STAND_NO)
WHERE A.GETDATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY D.DIVISION, D.STAND_NAME, ACCOUNT_NAME

UNION
<!-- 당기순이익 -->
SELECT '자본' DIVISION, '이익잉여금' STAND_NAME, '당기순이익' ACCOUNT_NAME,
NVL((SELECT NVL(SUM(DECODE(A.BUY_SELL,'매출',1,-1)*A1.PRICE*A1.QTY),0)
FROM CHIT A <!-- 일반전표 일자/(매입/매출) -->
     LEFT OUTER JOIN CHITLIST A1 ON (A.CHIT_NO=A1.CHIT_NO) <!-- 일반전표 단가 수량 -->
WHERE A.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101'))
+(SELECT NVL(SUM(C4.ORP_PRICE*C4.ORP_QTY),0)
FROM SELLCHIT C <!-- 매출 일자 -->
     LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
     LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO)
     LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO)
     LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) <!-- 매출상품 수량/금액 -->
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(D.AMOR_COST),0)
FROM AMOR_MEMORY D <!-- 감가상각액 -->
WHERE D.AMOR_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(E.RETIRE_SALARY),0)
FROM RETIREMENT E <!-- 퇴직금 -->
WHERE E.RETIRE_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')) 
-(SELECT NVL(SUM(F.DEDUCTION+F.ACTUAL_PAYMENT),0)
FROM SALARY_TRANS F <!-- 급여 -->
WHERE F.SAL_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101'))
+(SELECT NVL(SUM(H.RETMAT_QTY*J.COST),0)
FROM BUY_RETURN G <!-- 원자재 반품일 -->
     LEFT OUTER JOIN BUY_RET_M H ON (H.RET_NO=G.RET_NO) <!-- 원자재 반품수량 -->
     LEFT OUTER JOIN MATERIAL_IN I ON (I.RETMAT_NO=H.RETMAT_NO)
     LEFT OUTER JOIN BUY_OR_MAT J ON (J.ORMAT_CODE=I.ORMAT_CODE) <!-- 원자재 반품 단가 -->
WHERE G.RET_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(L.RET_LIST_QTY*K4.ORP_PRICE),0)
FROM OR_RETURN_P K <!-- 상품반품일 -->
     LEFT OUTER JOIN OR_RET_PLIST L ON (L.OR_RETP_NO=K.OR_RETP_NO) <!-- 반품수량 -->
     LEFT OUTER JOIN OR_SHIPMENT K1 ON (K1.SHIP_NO=K.SHIP_NO)
     LEFT OUTER JOIN OR_DELIVERY K2 ON (K2.DELIV_NO = K1.DELIV_NO)
     LEFT OUTER JOIN ORDERP K3 ON (K3.OR_NO = K2.OR_NO)
     LEFT OUTER JOIN OR_PLIST K4 ON (K4.OR_NO = K3.OR_NO) <!-- 반품 단가 -->
WHERE K.OR_RETP_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(M.DIS_CNT*M1.COST),0)
FROM MAT_DISPOSAL M <!-- 원자재 폐기 일자/수량 -->
     LEFT OUTER JOIN BUY_OR_MAT M1 ON (M.ORMAT_CODE=M1.ORMAT_CODE) <!-- 원자재 폐기단가 -->
WHERE M.DIS_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(N.PDIS_CNT*N1.PROD_OUT_PRICE),0)
FROM PROD_DIS N <!-- 상품폐기 일자/수량 -->
     LEFT OUTER JOIN PROD N1 ON (N1.PROD_NO=N.PROD_NO) <!-- 상품단가 -->
WHERE N.PDIS_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')),0) PRICE
FROM DUAL GROUP BY '자본', '이익잉여금', '당기순이익'
UNION
<!-- 부채 -->
SELECT '부채' DIVISION, '유동부채' STAND_NAME, '매입채무' ACCOUNT_NAME,
NVL(SUM(B3.ORMAT_QTY*B3.COST*(-1)),0) + NVL(SUM(B4.ITEM_QTY*B4.ITEM_COST*(-1)),0)
FROM BUYCHIT B <!-- 매입일자 -->
     LEFT OUTER JOIN BUY_PURCHASE B1 ON (B1.PUR_CODE=B.PUR_CODE)
     LEFT OUTER JOIN BUY_ORDER B2 ON (B2.OR_CODE = B1.OR_CODE)
     LEFT OUTER JOIN BUY_OR_MAT B3 ON (B3.OR_CODE = B2.OR_CODE) <!-- 매입원자재 수량/단가 -->
     LEFT OUTER JOIN BUY_ITEM B4 ON (B4.OR_CODE = B2.OR_CODE) <!-- 매입 물품 수량/단가 -->
WHERE B.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
UNION
<!-- 현금성 자본 -->
SELECT '자본' DIVISION, '이익잉여금' STAND_NAME, '미처분이익잉여금' ACCOUNT_NAME,
NVL((SELECT NVL(SUM(DECODE(A.BUY_SELL,'매출',1,-1)*A1.PRICE*A1.QTY),0)
FROM CHIT A <!-- 일반전표 일자/(매입/매출) -->
     LEFT OUTER JOIN CHITLIST A1 ON (A.CHIT_NO=A1.CHIT_NO) <!-- 일반전표 단가 수량 -->
WHERE A.CHIT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101'))
-(SELECT NVL(SUM(B3.ORMAT_QTY*B3.COST),0) + NVL(SUM(B4.ITEM_QTY*B4.ITEM_COST),0)
FROM BUYCHIT B <!-- 매입일자 -->
     LEFT OUTER JOIN BUY_PURCHASE B1 ON (B1.PUR_CODE=B.PUR_CODE)
     LEFT OUTER JOIN BUY_ORDER B2 ON (B2.OR_CODE = B1.OR_CODE)
     LEFT OUTER JOIN BUY_OR_MAT B3 ON (B3.OR_CODE = B2.OR_CODE) <!-- 매입원자재 수량/단가 -->
     LEFT OUTER JOIN BUY_ITEM B4 ON (B4.OR_CODE = B2.OR_CODE) <!-- 매입 물품 수량/단가 -->
WHERE B.CHIT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101'))
+(SELECT NVL(SUM(C4.ORP_PRICE*C4.ORP_QTY),0)
FROM SELLCHIT C <!--  매출 일자 -->
     LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
     LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO)
     LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO)
     LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) <!-- 매출상품 수량/금액 -->
WHERE C.CHIT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101'))
-(SELECT NVL(SUM(D.AMOR_COST),0)
FROM AMOR_MEMORY D <!-- 감가상각액 -->
WHERE D.AMOR_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101'))
-(SELECT NVL(SUM(E.RETIRE_SALARY),0)
FROM RETIREMENT E <!-- 퇴직금 -->
WHERE E.RETIRE_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101')) 
-(SELECT NVL(SUM(F.DEDUCTION+F.ACTUAL_PAYMENT),0)
FROM SALARY_TRANS F  <!-- 급여 -->
WHERE F.SAL_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101'))
+(SELECT NVL(SUM(H.RETMAT_QTY*J.COST),0)
FROM BUY_RETURN G <!-- 원자재 반품일 -->
     LEFT OUTER JOIN BUY_RET_M H ON (H.RET_NO=G.RET_NO) <!-- 원자재 반품수량 -->
     LEFT OUTER JOIN MATERIAL_IN I ON (I.RETMAT_NO=H.RETMAT_NO)
     LEFT OUTER JOIN BUY_OR_MAT J ON (J.ORMAT_CODE=I.ORMAT_CODE) <!-- 원자재 반품 단가 -->
WHERE G.RET_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101'))
-(SELECT NVL(SUM(L.RET_LIST_QTY*K4.ORP_PRICE),0)
FROM OR_RETURN_P K <!-- 상품반품일 -->
     LEFT OUTER JOIN OR_RET_PLIST L ON (L.OR_RETP_NO=K.OR_RETP_NO) <!--  반품수량 -->
     LEFT OUTER JOIN OR_SHIPMENT K1 ON (K1.SHIP_NO=K.SHIP_NO)
     LEFT OUTER JOIN OR_DELIVERY K2 ON (K2.DELIV_NO = K1.DELIV_NO)
     LEFT OUTER JOIN ORDERP K3 ON (K3.OR_NO = K2.OR_NO)
     LEFT OUTER JOIN OR_PLIST K4 ON (K4.OR_NO = K3.OR_NO) <!--  반품 단가 -->
WHERE K.OR_RETP_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101'))
-(SELECT NVL(SUM(M.DIS_CNT*M1.COST),0)
FROM MAT_DISPOSAL M <!-- 원자재 폐기 일자/수량 -->
     LEFT OUTER JOIN BUY_OR_MAT M1 ON (M.ORMAT_CODE=M1.ORMAT_CODE) <!-- 원자재 폐기단가 -->
WHERE M.DIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101'))
-(SELECT NVL(SUM(N.PDIS_CNT*N1.PROD_OUT_PRICE),0)
FROM PROD_DIS N <!-- 상품폐기 일자/수량 -->
     LEFT OUTER JOIN PROD N1 ON (N1.PROD_NO=N.PROD_NO) <!-- 상품단가 -->
WHERE N.PDIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101')),0) PRICE
FROM DUAL 
GROUP BY '자산', '당좌자산', '현금성자산'
ORDER BY 1 DESC,2 DESC) A


FULL OUTER JOIN 


(SELECT '자산' DIVISION, '유동자산' STAND_NAME, '재고자산' ACCOUNT_NAME,
<!-- 입고 -->
(SELECT NVL(SUM(P.PRICE*(A.QTY-B.QTY-C.QTY-D.QTY)),0) 
FROM(
SELECT NVL(SUM(A.MAT_IN_QTY),0) QTY, B.MAT_NO
FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE)
WHERE A.MAT_IN_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
GROUP BY B.MAT_NO) A LEFT OUTER JOIN 
<!-- 생산출고 -->
(SELECT NVL(SUM(C.PDUCT_CNT*E.MAT_NUMBER),0) QTY, E.MAT_NO
FROM MAT_MF_OUT A INNER JOIN MATERIAL B ON (A.MAT_NO = B.MAT_NO)
                INNER JOIN PDUCT_LIST C ON (C.PDUCT_NO = A.PDUCT_NO)
                INNER JOIN PROD D ON (D.PROD_NO = C.PROD_NO)
                INNER JOIN BOM E ON (E.PROD_NO = D.PROD_NO)
WHERE A.MF_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
GROUP BY E.MAT_NO) B ON (A.MAT_NO = B.MAT_NO)
LEFT OUTER JOIN (
<!-- 폐기출고 -->
SELECT NVL(SUM(A.DIS_CNT),0) QTY, A.MAT_NO
FROM MAT_DISPOSAL A 
WHERE A.DIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
GROUP BY A.MAT_NO
) C ON (A.MAT_NO = C.MAT_NO)
LEFT OUTER JOIN(
SELECT NVL(SUM(B.RETMAT_QTY),0) QTY, C.MAT_NO
FROM MATERIAL_OUT A INNER JOIN BUY_RET_M B ON (A.RETMAT_NO = B.RETMAT_NO)
                    INNER JOIN MAT_SECTOR C ON (C.MAT_SECTOR_NO = A.MAT_SECTOR_NO)
WHERE A.MET_OUT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101') 
GROUP BY C.MAT_NO
) D ON (A.MAT_NO = D.MAT_NO)
LEFT OUTER JOIN(
<!-- 최근 원자재 가액 -->
SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
GROUP BY B.MAT_NO
) P ON (P.MAT_NO = A.MAT_NO)) PRICE
FROM DUAL
     
   UNION

<!-- 고정자산 -->
SELECT D.DIVISION, D.STAND_NAME, ACCOUNT_NAME, NVL(SUM(GETCOST-NVL(COST,0)),0) PRICE 
FROM FIXASSETS A LEFT OUTER JOIN 
(SELECT FIXASSETS_NO, NVL(SUM(AMOR_COST),0) COST 
FROM AMOR_MEMORY
WHERE AMOR_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
GROUP BY FIXASSETS_NO
) B ON (A.FIXASSETS_NO=B.FIXASSETS_NO)
    INNER JOIN ACCOUNT C ON (C.ACCOUNT_NO = A.ACCOUNT_NO)
    INNER JOIN STANDARD_ACC D ON (D.STAND_NO=C.STAND_NO)
WHERE A.GETDATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
GROUP BY D.DIVISION, D.STAND_NAME, ACCOUNT_NAME

UNION
<!-- 당기순이익 -->
SELECT '자본' DIVISION, '이익잉여금' STAND_NAME, '당기순이익' ACCOUNT_NAME,
NVL((SELECT NVL(SUM(DECODE(A.BUY_SELL,'매출',1,-1)*A1.PRICE*A1.QTY),0)
FROM CHIT A <!-- 일반전표 일자/(매입/매출) -->
     LEFT OUTER JOIN CHITLIST A1 ON (A.CHIT_NO=A1.CHIT_NO) <!-- 일반전표 단가 수량 -->
WHERE A.CHIT_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101'))
+(SELECT NVL(SUM(C4.ORP_PRICE*C4.ORP_QTY),0)
FROM SELLCHIT C <!-- 매출 일자 -->
     LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
     LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO)
     LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO)
     LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) <!-- 매출상품 수량/금액 -->
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(D.AMOR_COST),0)
FROM AMOR_MEMORY D <!-- 감가상각액 -->
WHERE D.AMOR_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(E.RETIRE_SALARY),0)
FROM RETIREMENT E <!-- 퇴직금 -->
WHERE E.RETIRE_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')) 
-(SELECT NVL(SUM(F.DEDUCTION+F.ACTUAL_PAYMENT),0)
FROM SALARY_TRANS F <!-- 급여 -->
WHERE F.SAL_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101'))

+(SELECT NVL(SUM(H.RETMAT_QTY*J.COST),0)
FROM BUY_RETURN G <!-- 원자재 반품일 -->
     LEFT OUTER JOIN BUY_RET_M H ON (H.RET_NO=G.RET_NO) <!-- 원자재 반품수량 -->
     LEFT OUTER JOIN MATERIAL_IN I ON (I.RETMAT_NO=H.RETMAT_NO)
     LEFT OUTER JOIN BUY_OR_MAT J ON (J.ORMAT_CODE=I.ORMAT_CODE) <!-- 원자재 반품 단가 -->
WHERE G.RET_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(L.RET_LIST_QTY*K4.ORP_PRICE),0)
FROM OR_RETURN_P K <!-- 상품반품일 -->
     LEFT OUTER JOIN OR_RET_PLIST L ON (L.OR_RETP_NO=K.OR_RETP_NO) <!-- 반품수량 -->
     LEFT OUTER JOIN OR_SHIPMENT K1 ON (K1.SHIP_NO=K.SHIP_NO)
     LEFT OUTER JOIN OR_DELIVERY K2 ON (K2.DELIV_NO = K1.DELIV_NO)
     LEFT OUTER JOIN ORDERP K3 ON (K3.OR_NO = K2.OR_NO)
     LEFT OUTER JOIN OR_PLIST K4 ON (K4.OR_NO = K3.OR_NO) <!-- 반품 단가 -->
WHERE K.OR_RETP_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(M.DIS_CNT*M1.COST),0)
FROM MAT_DISPOSAL M <!-- 원자재 폐기 일자/수량 -->
     LEFT OUTER JOIN BUY_OR_MAT M1 ON (M.ORMAT_CODE=M1.ORMAT_CODE) <!-- 원자재 폐기단가 -->
WHERE M.DIS_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101'))
-(SELECT NVL(SUM(N.PDIS_CNT*N1.PROD_OUT_PRICE),0)
FROM PROD_DIS N <!-- 상품폐기 일자/수량 -->
     LEFT OUTER JOIN PROD N1 ON (N1.PROD_NO=N.PROD_NO) <!-- 상품단가 -->
WHERE N.PDIS_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')),0) PRICE
FROM DUAL GROUP BY '자본', '이익잉여금', '당기순이익'
UNION
<!-- 부채 -->
SELECT '부채' DIVISION, '유동부채' STAND_NAME, '매입채무' ACCOUNT_NAME,
NVL(SUM(B3.ORMAT_QTY*B3.COST*(-1)),0) + NVL(SUM(B4.ITEM_QTY*B4.ITEM_COST*(-1)),0)
FROM BUYCHIT B <!-- 매입일자 -->
     LEFT OUTER JOIN BUY_PURCHASE B1 ON (B1.PUR_CODE=B.PUR_CODE)
     LEFT OUTER JOIN BUY_ORDER B2 ON (B2.OR_CODE = B1.OR_CODE)
     LEFT OUTER JOIN BUY_OR_MAT B3 ON (B3.OR_CODE = B2.OR_CODE) <!-- 매입원자재 수량/단가 -->
     LEFT OUTER JOIN BUY_ITEM B4 ON (B4.OR_CODE = B2.OR_CODE) <!-- 매입 물품 수량/단가 -->
WHERE B.CHIT_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
UNION
<!-- 현금성 자본 -->
SELECT '자본' DIVISION, '이익잉여금' STAND_NAME, '미처분이익잉여금' ACCOUNT_NAME,
NVL((SELECT NVL(SUM(DECODE(A.BUY_SELL,'매출',1,-1)*A1.PRICE*A1.QTY),0)
FROM CHIT A <!-- 일반전표 일자/(매입/매출) -->
     LEFT OUTER JOIN CHITLIST A1 ON (A.CHIT_NO=A1.CHIT_NO) <!-- 일반전표 단가 수량 -->
WHERE A.CHIT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101'))
-(SELECT NVL(SUM(B3.ORMAT_QTY*B3.COST),0) + NVL(SUM(B4.ITEM_QTY*B4.ITEM_COST),0)
FROM BUYCHIT B <!-- 매입일자 -->
     LEFT OUTER JOIN BUY_PURCHASE B1 ON (B1.PUR_CODE=B.PUR_CODE)
     LEFT OUTER JOIN BUY_ORDER B2 ON (B2.OR_CODE = B1.OR_CODE)
     LEFT OUTER JOIN BUY_OR_MAT B3 ON (B3.OR_CODE = B2.OR_CODE) <!-- 매입원자재 수량/단가 -->
     LEFT OUTER JOIN BUY_ITEM B4 ON (B4.OR_CODE = B2.OR_CODE) <!-- 매입 물품 수량/단가 -->
WHERE B.CHIT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101'))
+(SELECT NVL(SUM(C4.ORP_PRICE*C4.ORP_QTY),0)
FROM SELLCHIT C <!--  매출 일자 -->
     LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
     LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO)
     LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO)
     LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) <!-- 매출상품 수량/금액 -->
WHERE C.CHIT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101'))
-(SELECT NVL(SUM(D.AMOR_COST),0)
FROM AMOR_MEMORY D <!-- 감가상각액 -->
WHERE D.AMOR_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101'))
-(SELECT NVL(SUM(E.RETIRE_SALARY),0)
FROM RETIREMENT E <!-- 퇴직금 -->
WHERE E.RETIRE_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101')) 
-(SELECT NVL(SUM(F.DEDUCTION+F.ACTUAL_PAYMENT),0)
FROM SALARY_TRANS F  <!-- 급여 -->
WHERE F.SAL_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101'))
+(SELECT NVL(SUM(H.RETMAT_QTY*J.COST),0)
FROM BUY_RETURN G <!-- 원자재 반품일 -->
     LEFT OUTER JOIN BUY_RET_M H ON (H.RET_NO=G.RET_NO) <!-- 원자재 반품수량 -->
     LEFT OUTER JOIN MATERIAL_IN I ON (I.RETMAT_NO=H.RETMAT_NO)
     LEFT OUTER JOIN BUY_OR_MAT J ON (J.ORMAT_CODE=I.ORMAT_CODE) <!-- 원자재 반품 단가 -->
WHERE G.RET_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101'))
-(SELECT NVL(SUM(L.RET_LIST_QTY*K4.ORP_PRICE),0)
FROM OR_RETURN_P K <!-- 상품반품일 -->
     LEFT OUTER JOIN OR_RET_PLIST L ON (L.OR_RETP_NO=K.OR_RETP_NO) <!--  반품수량 -->
     LEFT OUTER JOIN OR_SHIPMENT K1 ON (K1.SHIP_NO=K.SHIP_NO)
     LEFT OUTER JOIN OR_DELIVERY K2 ON (K2.DELIV_NO = K1.DELIV_NO)
     LEFT OUTER JOIN ORDERP K3 ON (K3.OR_NO = K2.OR_NO)
     LEFT OUTER JOIN OR_PLIST K4 ON (K4.OR_NO = K3.OR_NO) <!--  반품 단가 -->
WHERE K.OR_RETP_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101'))
-(SELECT NVL(SUM(M.DIS_CNT*M1.COST),0)
FROM MAT_DISPOSAL M <!-- 원자재 폐기 일자/수량 -->
     LEFT OUTER JOIN BUY_OR_MAT M1 ON (M.ORMAT_CODE=M1.ORMAT_CODE) <!-- 원자재 폐기단가 -->
WHERE M.DIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101'))
-(SELECT NVL(SUM(N.PDIS_CNT*N1.PROD_OUT_PRICE),0)
FROM PROD_DIS N <!-- 상품폐기 일자/수량 -->
     LEFT OUTER JOIN PROD N1 ON (N1.PROD_NO=N.PROD_NO) <!-- 상품단가 -->
WHERE N.PDIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101')),0) PRICE
FROM DUAL 
GROUP BY '자산', '당좌자산', '현금성자산'
ORDER BY 1 DESC,2 DESC) B ON (A.ACCOUNT_NAME = B.ACCOUNT_NAME)
ORDER BY 1 DESC, 2 DESC

</select>
<select id="selectbuySell" parameterType="StatisticsVO" resultType="StatisticsVO">
SELECT A.NUM, A.DIVISION, A.ACCOUNT_NAME, A.PRICE STANDARD, B.PRICE COMPARE

FROM 
<!--  상품매출 -->
(SELECT 1 NUM, '매출' DIVISION, '상품매출' ACCOUNT_NAME, 
(SELECT NVL(SUM(C4.ORP_PRICE*C4.ORP_QTY),0) 
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')) PRICE 
FROM DUAL

UNION

<!-- 매출원가 -->
SELECT 2 NUM, '매출원가' DIVISION, '상품매출원가' ACCOUNT_NAME, 
(SELECT NVL(SUM(C6.MAT_NUMBER*C4.ORP_QTY*C7.PRICE),0)
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
                LEFT OUTER JOIN PROD C5 ON (C5.PROD_NO = C4.PROD_NO)
                LEFT OUTER JOIN BOM C6 ON (C6.PROD_NO = C5.PROD_NO)
                LEFT OUTER JOIN(

SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY B.MAT_NO
) C7 ON (C7.MAT_NO = C6.MAT_NO)
WHERE C.CHIT_DATE BETWEEN TO_DATE(2020+1||'0101') AND TO_DATE(2020+1||'0101')) PRICE
FROM DUAL

UNION

<!-- 퇴직급여 -->
SELECT 3 NUM, '판매비 및 일반관리비' DIVISION, '퇴직급여' ACCOUNT_NAME,
(SELECT NVL(SUM(A.RETIRE_SALARY),0)
FROM RETIREMENT A
WHERE A.PAYMENT_DAY BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')) PRICE 
FROM DUAL

UNION

<!--  보험료 -->
SELECT 4 NUM, '판매비 및 일반관리비' DIVISION, '보험료' ACCOUNT_NAME,
(SELECT NVL(SUM(A.DEDUCTION),0)
FROM SALARY_TRANS A
WHERE A.SAL_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')) PRICE 
FROM DUAL

UNION

<!-- 영업외수익 -->
SELECT 5 NUM, '영업외수익' DIVISION, '잡수익' ACCOUNT_NAME,
(SELECT NVL(SUM(B.PRICE*B.QTY),0)
FROM CHIT A INNER JOIN CHITLIST B ON (A.CHIT_NO=B.CHIT_NO)
WHERE A.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
AND A.BUY_SELL = '매출'
) PRICE 
FROM DUAL

UNION

<!--   영업외비용 -->
SELECT 6 NUM, '영업외비용' DIVISION, '잡손실' ACCOUNT_NAME,
(SELECT NVL(SUM(B.PRICE*B.QTY),0)
FROM CHIT A INNER JOIN CHITLIST B ON (A.CHIT_NO=B.CHIT_NO)
WHERE A.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
AND A.BUY_SELL = '매입'
) PRICE 
FROM DUAL
ORDER BY NUM) A

FULL OUTER JOIN 

(SELECT 1 NUM, '매출' DIVISION, '상품매출' ACCOUNT_NAME, 
(SELECT NVL(SUM(C4.ORP_PRICE*C4.ORP_QTY),0) 
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')) PRICE 
FROM DUAL

UNION

<!-- 매출원가 -->
SELECT 2 NUM, '매출원가' DIVISION, '상품매출원가' ACCOUNT_NAME, 
(SELECT NVL(SUM(C6.MAT_NUMBER*C4.ORP_QTY*C7.PRICE),0)
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
                LEFT OUTER JOIN PROD C5 ON (C5.PROD_NO = C4.PROD_NO)
                LEFT OUTER JOIN BOM C6 ON (C6.PROD_NO = C5.PROD_NO)
                LEFT OUTER JOIN(

SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY B.MAT_NO
) C7 ON (C7.MAT_NO = C6.MAT_NO)
WHERE C.CHIT_DATE BETWEEN TO_DATE(2020+1||'0101') AND TO_DATE(2020+1||'0101')) PRICE
FROM DUAL

UNION

<!-- 퇴직급여 -->
SELECT 3 NUM, '판매비 및 일반관리비' DIVISION, '퇴직급여' ACCOUNT_NAME,
(SELECT NVL(SUM(A.RETIRE_SALARY),0)
FROM RETIREMENT A
WHERE A.PAYMENT_DAY BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')) PRICE 
FROM DUAL

UNION

<!--  보험료 -->
SELECT 4 NUM, '판매비 및 일반관리비' DIVISION, '보험료' ACCOUNT_NAME,
(SELECT NVL(SUM(A.DEDUCTION),0)
FROM SALARY_TRANS A
WHERE A.SAL_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')) PRICE 
FROM DUAL

UNION

<!-- 영업외수익 -->
SELECT 5 NUM, '영업외수익' DIVISION, '잡수익' ACCOUNT_NAME,
(SELECT NVL(SUM(B.PRICE*B.QTY),0)
FROM CHIT A INNER JOIN CHITLIST B ON (A.CHIT_NO=B.CHIT_NO)
WHERE A.CHIT_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
AND A.BUY_SELL = '매출'
) PRICE 
FROM DUAL

UNION

<!--   영업외비용 -->
SELECT 6 NUM, '영업외비용' DIVISION, '잡손실' ACCOUNT_NAME,
(SELECT NVL(SUM(B.PRICE*B.QTY),0)
FROM CHIT A INNER JOIN CHITLIST B ON (A.CHIT_NO=B.CHIT_NO)
WHERE A.CHIT_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
AND A.BUY_SELL = '매입'
) PRICE 
FROM DUAL
ORDER BY NUM) B ON (A.ACCOUNT_NAME=B.ACCOUNT_NAME)
ORDER BY NUM
</select>

<select id="selectProductCost" parameterType="StatisticsVO" resultType="StatisticsVO">
SELECT A.DIVISION, A.ACCOUNT_NAME, A.PRICE STANDARD, B.PRICE COMPARE
FROM(
<!-- 기초 재고액 -->
SELECT 1 NUM, '원재료비' DIVISION, '기초 재고액' ACCOUNT_NAME, NVL(SUM(P.PRICE*(H.MAT_IN_QTY-(E.PDUCT_CNT*G.MAT_NUMBER)-J.RETMAT_QTY - C.DIS_CNT)),0) PRICE
FROM MATERIAL A LEFT OUTER JOIN MAT_SECTOR B ON (B.MAT_NO=A.MAT_NO)
                LEFT OUTER JOIN MATERIAL_IN H ON (B.MAT_SECTOR_NO=H.MAT_SECTOR_NO)
                LEFT OUTER JOIN MAT_DISPOSAL C ON (C.MAT_NO = A.MAT_NO)
                LEFT OUTER JOIN MAT_MF_OUT D ON(D.MAT_NO=A.MAT_NO)
                LEFT OUTER JOIN PDUCT_LIST E ON (E.PDUCT_NO=D.PDUCT_NO)
                LEFT OUTER JOIN PROD F ON (F.PROD_NO=E.PROD_NO)
                LEFT OUTER JOIN BOM G ON (G.PROD_NO = F.PROD_NO)
                LEFT OUTER JOIN MATERIAL_OUT I ON (I.MAT_SECTOR_NO=B.MAT_SECTOR_NO)
                LEFT OUTER JOIN BUY_RET_M J ON (J.RETMAT_NO=I.RETMAT_NO)
                LEFT OUTER JOIN(
				SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
				FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
				WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
				GROUP BY B.MAT_NO) P ON (P.MAT_NO = A.MAT_NO)
WHERE C.DIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101')
        OR H.MAT_IN_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101')
        OR D.MF_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101')
        OR I.MET_OUT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard},4,'0')||'0101')
                
UNION
<!-- 기말 재고액 -->

SELECT 3 NUM, '원재료비' DIVISION, '기말 재고액' ACCOUNT_NAME, NVL(SUM(P.PRICE*(H.MAT_IN_QTY-(E.PDUCT_CNT*G.MAT_NUMBER)-J.RETMAT_QTY - C.DIS_CNT)),0) PRICE
FROM MATERIAL A LEFT OUTER JOIN MAT_SECTOR B ON (B.MAT_NO=A.MAT_NO)
                LEFT OUTER JOIN MATERIAL_IN H ON (B.MAT_SECTOR_NO=H.MAT_SECTOR_NO)
                LEFT OUTER JOIN MAT_DISPOSAL C ON (C.MAT_NO = A.MAT_NO)
                LEFT OUTER JOIN MAT_MF_OUT D ON(D.MAT_NO=A.MAT_NO)
                LEFT OUTER JOIN PDUCT_LIST E ON (E.PDUCT_NO=D.PDUCT_NO)
                LEFT OUTER JOIN PROD F ON (F.PROD_NO=E.PROD_NO)
                LEFT OUTER JOIN BOM G ON (G.PROD_NO = F.PROD_NO)
                LEFT OUTER JOIN MATERIAL_OUT I ON (I.MAT_SECTOR_NO=B.MAT_SECTOR_NO)
                LEFT OUTER JOIN BUY_RET_M J ON (J.RETMAT_NO=I.RETMAT_NO)
                LEFT OUTER JOIN(
				SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
				FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
				WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
				GROUP BY B.MAT_NO) P ON (P.MAT_NO = A.MAT_NO)
WHERE C.DIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
        OR H.MAT_IN_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
        OR D.MF_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
        OR I.MET_OUT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')

UNION
<!--  당기매입액 -->

SELECT 2 NUM, '원재료비' DIVISION, '당기 매입액' ACCOUNT_NAME, NVL(SUM(A.MAT_IN_QTY*B.COST),0) PRICE
FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE)
WHERE A.MAT_IN_DATE BETWEEN LPAD(#{standard},4,'0')||'0101' AND LPAD(#{standard}+1,4,'0')||'0101'

<!-- 노무비 -->

UNION

SELECT 4 NUM, '노무비' DIVISION, '급여' ACCOUNT_NAME, NVL(SUM(A.MY_BASICSALARY + A.EXTENSION_PAY),0) PRICE
FROM SALARY_TRANS A INNER JOIN EMPLOYEE B ON (A.EMP_NO = B.EMP_NO)
WHERE (B.FULLTIME = 'D001' OR B.FULLTIME = 'D002')
    AND A.SAL_DATE BETWEEN LPAD(#{standard},4,'0')||'0101' AND LPAD(#{standard}+1,4,'0')||'0101'
UNION
SELECT 5 NUM, '노무비' DIVISION, '임금' ACCOUNT_NAME, NVL(SUM(A.MY_BASICSALARY + A.EXTENSION_PAY),0) PRICE
FROM SALARY_TRANS A INNER JOIN EMPLOYEE B ON (A.EMP_NO = B.EMP_NO)
WHERE B.FULLTIME = 'D003'
    AND A.SAL_DATE BETWEEN LPAD(#{standard},4,'0')||'0101' AND LPAD(#{standard}+1,4,'0')||'0101'
    
UNION

<!--  경비 -->
SELECT 6 NUM, '경비' DIVISION, '세금과 공과금' ACCOUNT_NAME, NVL(SUM(A.DEDUCTION),0)
FROM SALARY_TRANS A
WHERE A.SAL_DATE BETWEEN LPAD(#{standard},4,'0')||'0101' AND LPAD(#{standard}+1,4,'0')||'0101'
    
UNION

SELECT 7 NUM, '경비' DIVISION, '감가상각비' ACCOUNT_NAME, NVL(SUM(A.AMOR_COST),0)
FROM AMOR_MEMORY A 
WHERE A.AMOR_DATE BETWEEN LPAD(#{standard},4,'0')||'0101' AND LPAD(#{standard}+1,4,'0')||'0101'
) A

INNER JOIN 
(
<!-- 기초 재고액 -->
SELECT 1 NUM, '원재료비' DIVISION, '기초 재고액' ACCOUNT_NAME, NVL(SUM(P.PRICE*(H.MAT_IN_QTY-(E.PDUCT_CNT*G.MAT_NUMBER)-J.RETMAT_QTY - C.DIS_CNT)),0) PRICE
FROM MATERIAL A LEFT OUTER JOIN MAT_SECTOR B ON (B.MAT_NO=A.MAT_NO)
                LEFT OUTER JOIN MATERIAL_IN H ON (B.MAT_SECTOR_NO=H.MAT_SECTOR_NO)
                LEFT OUTER JOIN MAT_DISPOSAL C ON (C.MAT_NO = A.MAT_NO)
                LEFT OUTER JOIN MAT_MF_OUT D ON(D.MAT_NO=A.MAT_NO)
                LEFT OUTER JOIN PDUCT_LIST E ON (E.PDUCT_NO=D.PDUCT_NO)
                LEFT OUTER JOIN PROD F ON (F.PROD_NO=E.PROD_NO)
                LEFT OUTER JOIN BOM G ON (G.PROD_NO = F.PROD_NO)
                LEFT OUTER JOIN MATERIAL_OUT I ON (I.MAT_SECTOR_NO=B.MAT_SECTOR_NO)
                LEFT OUTER JOIN BUY_RET_M J ON (J.RETMAT_NO=I.RETMAT_NO)
                LEFT OUTER JOIN(
				SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
				FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
				WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
				GROUP BY B.MAT_NO) P ON (P.MAT_NO = A.MAT_NO)
WHERE C.DIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101')
        OR H.MAT_IN_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101')
        OR D.MF_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101')
        OR I.MET_OUT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare},4,'0')||'0101')
                
UNION
<!--  기말 재고액 -->

SELECT 3 NUM, '원재료비' DIVISION, '기말 재고액' ACCOUNT_NAME, NVL(SUM(P.PRICE*(H.MAT_IN_QTY-(E.PDUCT_CNT*G.MAT_NUMBER)-J.RETMAT_QTY - C.DIS_CNT)),0) PRICE
FROM MATERIAL A LEFT OUTER JOIN MAT_SECTOR B ON (B.MAT_NO=A.MAT_NO)
                LEFT OUTER JOIN MATERIAL_IN H ON (B.MAT_SECTOR_NO=H.MAT_SECTOR_NO)
                LEFT OUTER JOIN MAT_DISPOSAL C ON (C.MAT_NO = A.MAT_NO)
                LEFT OUTER JOIN MAT_MF_OUT D ON(D.MAT_NO=A.MAT_NO)
                LEFT OUTER JOIN PDUCT_LIST E ON (E.PDUCT_NO=D.PDUCT_NO)
                LEFT OUTER JOIN PROD F ON (F.PROD_NO=E.PROD_NO)
                LEFT OUTER JOIN BOM G ON (G.PROD_NO = F.PROD_NO)
                LEFT OUTER JOIN MATERIAL_OUT I ON (I.MAT_SECTOR_NO=B.MAT_SECTOR_NO)
                LEFT OUTER JOIN BUY_RET_M J ON (J.RETMAT_NO=I.RETMAT_NO)
                LEFT OUTER JOIN(
				SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
				FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
				WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{compare},4,'0')||'0101') AND TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
				GROUP BY B.MAT_NO) P ON (P.MAT_NO = A.MAT_NO)
WHERE C.DIS_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
        OR H.MAT_IN_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
        OR D.MF_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')
        OR I.MET_OUT_DATE <![CDATA[<]]> TO_DATE(LPAD(#{compare}+1,4,'0')||'0101')

UNION
<!-- 당기매입액 -->

SELECT 2 NUM, '원재료비' DIVISION, '당기 매입액' ACCOUNT_NAME, NVL(SUM(A.MAT_IN_QTY*B.COST),0) PRICE
FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE)
WHERE A.MAT_IN_DATE BETWEEN LPAD(#{compare},4,'0')||'0101' AND LPAD(#{compare}+1,4,'0')||'0101'

<!-- 노무비 -->

UNION

SELECT 4 NUM, '노무비' DIVISION, '급여' ACCOUNT_NAME, NVL(SUM(A.MY_BASICSALARY + A.EXTENSION_PAY),0) PRICE
FROM SALARY_TRANS A INNER JOIN EMPLOYEE B ON (A.EMP_NO = B.EMP_NO)
WHERE (B.FULLTIME = 'D001' OR B.FULLTIME = 'D002')
    AND A.SAL_DATE BETWEEN LPAD(#{compare},4,'0')||'0101' AND LPAD(#{compare}+1,4,'0')||'0101'
UNION
SELECT 5 NUM, '노무비' DIVISION, '임금' ACCOUNT_NAME, NVL(SUM(A.MY_BASICSALARY + A.EXTENSION_PAY),0) PRICE
FROM SALARY_TRANS A INNER JOIN EMPLOYEE B ON (A.EMP_NO = B.EMP_NO)
WHERE B.FULLTIME = 'D003'
    AND A.SAL_DATE BETWEEN LPAD(#{compare},4,'0')||'0101' AND LPAD(#{compare}+1,4,'0')||'0101'
    
UNION

<!--  경비 -->
SELECT 6 NUM, '경비' DIVISION, '세금과 공과금' ACCOUNT_NAME, NVL(SUM(A.DEDUCTION),0)
FROM SALARY_TRANS A
WHERE A.SAL_DATE BETWEEN LPAD(#{compare},4,'0')||'0101' AND LPAD(#{compare}+1,4,'0')||'0101'
    
UNION

SELECT 7 NUM, '경비' DIVISION, '감가상각비' ACCOUNT_NAME, NVL(SUM(A.AMOR_COST),0)
FROM AMOR_MEMORY A 
WHERE A.AMOR_DATE BETWEEN LPAD(#{compare},4,'0')||'0101' AND LPAD(#{compare}+1,4,'0')||'0101'

) B ON (A.ACCOUNT_NAME = B.ACCOUNT_NAME)
ORDER BY A.NUM
</select>

<select id="selectMonth" parameterType="StatisticsVO" resultType="StatisticsVO"> 
SELECT A.NUM, A.DIVISION, A.ACCOUNT_NAME, A.PRICE PRICE
FROM
 
(SELECT 1 NUM, TO_CHAR(C.CHIT_DATE, 'YYYY"년" MM"월"') DIVISION, '매출' ACCOUNT_NAME, 
NVL(SUM(C4.ORP_PRICE*C4.ORP_QTY),0) PRICE 
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101') 
GROUP BY 1, TO_CHAR(C.CHIT_DATE, 'YYYY"년" MM"월"'), '매출'

UNION

SELECT 2 NUM, TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"') DIVISION, '상품매출' ACCOUNT_NAME, 
NVL(SUM(C4.ORP_PRICE*C4.ORP_QTY),0) PRICE 
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"'), 2, '상품매출'

UNION

SELECT 3 NUM, TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"') DIVISION, '매출원가' ACCOUNT_NAME, 
NVL(SUM(C6.MAT_NUMBER*C4.ORP_QTY*C7.PRICE),0) PRICE
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
                LEFT OUTER JOIN PROD C5 ON (C5.PROD_NO = C4.PROD_NO)
                LEFT OUTER JOIN BOM C6 ON (C6.PROD_NO = C5.PROD_NO)
                LEFT OUTER JOIN(
				SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
				FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
				WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
				GROUP BY B.MAT_NO) C7 ON (C7.MAT_NO = C6.MAT_NO)
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY 3, TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"'), '매출원가'

UNION

SELECT 4 NUM, TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"') DIVISION, '상품매출원가' ACCOUNT_NAME, 
NVL(SUM(C6.MAT_NUMBER*C4.ORP_QTY*C7.PRICE),0) PRICE
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
                LEFT OUTER JOIN PROD C5 ON (C5.PROD_NO = C4.PROD_NO)
                LEFT OUTER JOIN BOM C6 ON (C6.PROD_NO = C5.PROD_NO)
                LEFT OUTER JOIN(
				SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
				FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
				WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
				GROUP BY B.MAT_NO) C7 ON (C7.MAT_NO = C6.MAT_NO)
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101') 
GROUP BY 4, TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"'), '상품매출원가'


UNION



SELECT 5 NUM, A.DIVISION, '매출총이익' ACCOUNT_NAME, NVL(SUM(A.PRICE-B.PRICE),0)

FROM 
(SELECT TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"') DIVISION, '상품매출' ACCOUNT_NAME, 
NVL(SUM(C4.ORP_PRICE*C4.ORP_QTY),0) PRICE 
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"'), 2, '상품매출') A

FULL OUTER JOIN

(SELECT TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"') DIVISION, NVL(SUM(C6.MAT_NUMBER*C4.ORP_QTY*C7.PRICE),0) PRICE
FROM SELLCHIT C LEFT OUTER JOIN OR_SHIPMENT C1 ON (C1.SHIP_NO = C.SHIP_NO)
                LEFT OUTER JOIN OR_DELIVERY C2 ON (C2.DELIV_NO=C1.DELIV_NO) 
                LEFT OUTER JOIN ORDERP C3 ON (C3.OR_NO = C2.OR_NO) 
                LEFT OUTER JOIN OR_PLIST C4 ON (C4.OR_NO = C3.OR_NO) 
                LEFT OUTER JOIN PROD C5 ON (C5.PROD_NO = C4.PROD_NO)
                LEFT OUTER JOIN BOM C6 ON (C6.PROD_NO = C5.PROD_NO)
                LEFT OUTER JOIN(
				SELECT MAX(A.MAT_IN_DATE) ,NVL(MAX(B.COST),0) PRICE, B.MAT_NO
				FROM MATERIAL_IN A LEFT OUTER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE=B.ORMAT_CODE) 
				WHERE A.MAT_IN_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
				GROUP BY B.MAT_NO) C7 ON (C7.MAT_NO = C6.MAT_NO)
WHERE C.CHIT_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY 3, TO_CHAR(C.CHIT_DATE,'YYYY"년" MM"월"'), '매출원가') B ON (B.DIVISION = A.DIVISION)
GROUP BY 5, A.DIVISION, '매출총이익'


UNION

SELECT DISTINCT 6 NUM, A.DIVISION, '판매비 및 일반관리비' ACCOUNT_NAME,
NVL(SUM(A.PRICE),0) PRICE
FROM 

(SELECT TO_CHAR(A.PAYMENT_DAY,'YYYY"년" MM"월"') DIVISION, NVL(SUM(A.RETIRE_SALARY),0) PRICE
FROM RETIREMENT A
WHERE A.PAYMENT_DAY BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY TO_CHAR(A.PAYMENT_DAY,'YYYY"년" MM"월"')

UNION

SELECT TO_CHAR(A.SAL_DATE,'YYYY"년" MM"월"') DIVISION, NVL(SUM(A.ACTUAL_PAYMENT),0) PRICE
FROM SALARY_TRANS A
WHERE A.SAL_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101') 
GROUP BY TO_CHAR(A.SAL_DATE,'YYYY"년" MM"월"')

UNION

SELECT TO_CHAR(A.SAL_DATE,'YYYY"년" MM"월"') DIVISION, NVL(SUM(A.DEDUCTION),0) PRICE 
FROM SALARY_TRANS A
WHERE A.SAL_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101') 
GROUP BY TO_CHAR(A.SAL_DATE,'YYYY"년" MM"월"'))  A
GROUP BY 6, A.DIVISION, '판매비 및 일반관리비'


UNION

SELECT 7 NUM, TO_CHAR(A.PAYMENT_DAY,'YYYY"년" MM"월"') DIVISION, '퇴직급여' ACCOUNT_NAME,
NVL(SUM(A.RETIRE_SALARY),0) PRICE
FROM RETIREMENT A
WHERE A.PAYMENT_DAY BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY 7, TO_CHAR(A.PAYMENT_DAY,'YYYY"년" MM"월"'), '퇴직급여'

UNION

SELECT 8 NUM, TO_CHAR(A.SAL_DATE,'YYYY"년" MM"월"') DIVISION, '일반급여' ACCOUNT_NAME,
NVL(SUM(A.ACTUAL_PAYMENT),0) PRICE
FROM SALARY_TRANS A
WHERE A.SAL_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101') 
GROUP BY 8, TO_CHAR(A.SAL_DATE,'YYYY"년" MM"월"'), '일반급여'

UNION

SELECT 9 NUM, TO_CHAR(A.SAL_DATE,'YYYY"년" MM"월"') DIVISION, '보험료' ACCOUNT_NAME,
NVL(SUM(A.DEDUCTION),0) PRICE 
FROM SALARY_TRANS A
WHERE A.SAL_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101') 
GROUP BY 9, TO_CHAR(A.SAL_DATE,'YYYY"년" MM"월"'), '보험료' 


UNION


SELECT A.NUM, A.DIVISION, A.ACCOUNT_NAME,
NVL(SUM(A.PRICE),0) PRICE
FROM 

(SELECT 11 NUM, TO_CHAR(A.DIS_DATE,'YYYY"년" MM"월"') DIVISION, '영업외비용' ACCOUNT_NAME, 
NVL(SUM(A.DIS_CNT * B.COST),0) PRICE
FROM MAT_DISPOSAL A INNER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE = B.ORMAT_CODE)
WHERE A.DIS_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101') 
GROUP BY 11, TO_CHAR(A.DIS_DATE,'YYYY"년" MM"월"'), '영업외비용' 

UNION

SELECT 11 NUM, TO_CHAR(A.PDIS_DATE,'YYYY"년" MM"월"') DIVISION, '영업외비용' ACCOUNT_NAME, 
NVL(SUM(A.PDIS_CNT * B.PROD_OUT_PRICE),0) PRICE
FROM PROD_DIS A INNER JOIN PROD B ON (B.PROD_NO = A.PROD_NO)
WHERE A.PDIS_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY 11, TO_CHAR(A.PDIS_DATE,'YYYY"년" MM"월"'), '영업외비용' ) A
GROUP BY A.NUM, A.DIVISION, A.ACCOUNT_NAME

UNION

SELECT 12 NUM, TO_CHAR(A.DIS_DATE,'YYYY"년" MM"월"') DIVISION, '원자재폐기비용' ACCOUNT_NAME, 
NVL(SUM(A.DIS_CNT * B.COST),0) PRICE
FROM MAT_DISPOSAL A INNER JOIN BUY_OR_MAT B ON (A.ORMAT_CODE = B.ORMAT_CODE)
WHERE A.DIS_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101') 
GROUP BY 12, TO_CHAR(A.DIS_DATE,'YYYY"년" MM"월"'), '원자재폐기비용' 

UNION

SELECT 13 NUM, TO_CHAR(A.PDIS_DATE,'YYYY"년" MM"월"') DIVISION, '상품폐기비용' ACCOUNT_NAME, 
NVL(SUM(A.PDIS_CNT * B.PROD_OUT_PRICE),0) PRICE
FROM PROD_DIS A INNER JOIN PROD B ON (B.PROD_NO = A.PROD_NO)
WHERE A.PDIS_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
GROUP BY 13, TO_CHAR(A.PDIS_DATE,'YYYY"년" MM"월"'), '상품폐기비용' 

ORDER BY NUM) A

ORDER BY DIVISION, NUM
</select>
	<select id="selectProduct" parameterType="StatisticsVO" resultType="D3VO">
	SELECT A.* 
	FROM(
		SELECT DISTINCT E.PROD_NAME NAME, E.PROD_NAME CATEGORY,
				(SELECT TO_CHAR(MAX(A.SHIP_P_DATE),'YYYY-MM-DD')
				 FROM OR_SHIPMENT A
				 WHERE A.SHIP_P_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
				) "DATE",
				SUM(D.ORP_QTY*D.ORP_PRICE) VALUE
		FROM OR_SHIPMENT A INNER JOIN OR_DELIVERY B ON (A.DELIV_NO = B.DELIV_NO)
	                    INNER JOIN ORDERP C ON (C.OR_NO = B.OR_NO)
	                    INNER JOIN OR_PLIST D ON (D.OR_NO = C.OR_NO)
	                    INNER JOIN PROD E ON (E.PROD_NO = D.PROD_NO)
		WHERE A.SHIP_P_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')
		GROUP BY E.PROD_NAME, E.PROD_NAME
		
		UNION
		
		SELECT DISTINCT E.PROD_NAME NAME, E.PROD_NAME CATEGORY,
			TO_CHAR(A.SHIP_P_DATE,'YYYY-MM-DD') "DATE",
	   		SUM(D.ORP_QTY*D.ORP_PRICE) OVER (PARTITION BY E.PROD_NAME ORDER BY A.SHIP_P_DATE
	                           RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
	                         ) AS VALUE
	       
	    FROM OR_SHIPMENT A INNER JOIN OR_DELIVERY B ON (A.DELIV_NO = B.DELIV_NO)
	                    INNER JOIN ORDERP C ON (C.OR_NO = B.OR_NO)
	                    INNER JOIN OR_PLIST D ON (D.OR_NO = C.OR_NO)
	                    INNER JOIN PROD E ON (E.PROD_NO = D.PROD_NO)
		WHERE A.SHIP_P_DATE BETWEEN TO_DATE(LPAD(#{standard},4,'0')||'0101') AND TO_DATE(LPAD(#{standard}+1,4,'0')||'0101')) A
    ORDER BY 3
	</select>
</mapper>