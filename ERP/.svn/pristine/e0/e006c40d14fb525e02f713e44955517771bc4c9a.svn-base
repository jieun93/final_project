<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>    
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring" %>
<h1>감가상각비현황</h1><br>
<table>
	<tfoot>
		<tr>
			<td colspan="8">
				<div class="d-block d-md-flex align-items-center d-print-none">
				<div class="form-inline d-flex ml-md-auto d-print-none" id="searchUI">
					<text>자산유형</text>
					<select name="account_no" class="form-control mr-2">
						<option value="">
							<spring:message code='all'/>
						</option>
						<c:forEach items="${accountList }" var="account">
							<option value="${account.account_no }"
								${account.account_no==account_no?"selected":"" } >${account.account_name }
							</option>
						</c:forEach>
					</select>
					<text>조회기간</text>
					<select name="startyear" id='syear' class="form-control mr-2" required="required">
					</select>년
					<select name="startmonth" id='smonth' class="form-control mr-2">
					</select>월
					~
					<select name="endyear" id='eyear' class="form-control mr-2" required="required">
					</select>년
					<select name="endmonth" id='emonth' class="form-control mr-2">
					</select>월
					<input class="btn btn-success mr-2" type="button" value="<spring:message code='search'/>" id="searchBtn">
				</div>
				</div>
			</td>
		</tr>
	</tfoot>
</table>
<table class="table table-bordered table-hover text-left">
	<thead class="table-primary">
		<tr id='thead' >
			<th class='basic'>자산유형</th>
			<th class='basic'>자산코드</th>
			<th class='basic'>자산명</th>
			<th class='basic'>자산상태</th>
			<th class='basic'>합계</th>
		</tr>
	</thead>
	<tbody id="listBody">
		
	</tbody>
</table>
<form id="searchForm" action="${cPath }/account/fixAssets/fixMinus">
	<input type="hidden" name="account_no" value="${vo.account_no}"/>
	<input type="hidden" name="startyear" value="${vo.startyear }"/>
	<input type="hidden" name="startmonth" value="${vo.startmonth }"/>
	<input type="hidden" name="endyear" value="${vo.endyear }"/>
	<input type="hidden" name="endmonth" value="${vo.endmonth }"/>
</form>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">전표 상세내역</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">닫기</button>
        <button type="button" class="btn btn-primary">수정</button>
      </div>
    </div>
  </div>
</div>

<div id='s'></div>
<script type="text/javascript"
	src="${pageContext.request.contextPath }/resources/js/paging.js"></script>
<script>
var listBody = $("#listBody");
var searchForm = $("#searchForm").paging({
	searchUI:"#searchUI",
	searchBtn:"#searchBtn",
	byAjax:true,
	success:function(resp){
		var thead = $("#thead");
		thead.find("th").not(".basic").remove();
		var date1 = new Date($("#syear").val(),$("#smonth").val()==""?0:$("#smonth").val()-1,1);
		var date2 = new Date($("#eyear").val(),$("#emonth").val()==""?11:$("#emonth").val()-1,1);
// 		console.log(thead);
// 		console.log(date2);
		
		
		var years = date2.getFullYear() - date1.getFullYear();

		var months = date2.getMonth() - date1.getMonth();

		var differentMonth = years * 12 + months + 1;
		
		var sumsum = [];
		var sum = [];
// 		console.log(sum[0]);
		for(var i = 0; i < differentMonth; i++){
			thead.append($("<th>").text(date1.getFullYear()+'년 '+(date1.getMonth()+1<10?'0'+(date1.getMonth()+1):date1.getMonth()+1)+'월'));
			date1.setMonth(date1.getMonth()+1);
			sum[i] = 0;
			sumsum[i] = 0;
		}
		
		let fixList = resp;
		let trTags = [];
		let trsum = 0;
		let trsumsum = 0;
		let total = 0;
		let sumTag;
		if(fixList.length>0){
			let i = 0;
			$.each(fixList, function(idx, fix){
				if(idx == 0) 
					accountChange = fix.account_name;
					
				if(i == 0){
					// 자산유형 바뀔때
					if(accountChange != fix.account_name){
						accountChange = fix.account_name;
						trTag = $("<tr>").append(
							$("<td>").text("소계").addClass("text-center").attr("colspan",4)
							,$("<td>").text(numberWithCommas(trsumsum))
						);
						trsumsum = 0;
						for(let x = 0; x < differentMonth; x++){
							trTag.append($("<td>").text(numberWithCommas(sum[i])));
							sum[i] = 0;
						}
						trTags.push(trTag);
					}
					//자산유형 안바뀔때
					trTag = $("<tr>").append(
						$("<td>").text(fix.account_name)
						,$("<td>").text(fix.fixassets_no)
						,$("<td>").text(fix.assets_name)
						,$("<td>").text(fix.status)
						,sumTag = $("<td>")
					);
				};
// 				console.log(fix.amor_date);
				//날짜 같은지 검사
				while(i<differentMonth){
					if(thead.children().eq(i+5).text() == fix.amor_date){
						console.log(sum[i]);
						trTag.append($("<td>").text(numberWithCommas(fix.amor_cost)))
						sum[i] += fix.amor_cost;
						sumsum[i] += fix.amor_cost;
						trsum += fix.amor_cost;
						trsumsum += fix.amor_cost;
						total += fix.amor_cost;
						trTags.push(trTag);
						i++;
						break;
					}else{
						trTag.append($("<td>"));
						i++
					}
				}
				//끝까지 다 가면 원래 자리로
				if(i == differentMonth){
					sumTag.text(numberWithCommas(trsum));
					trsum = 0;
					i = 0;
				}
			})
			//검색한 놈들 끝
			
				while(i!=0&&i<=differentMonth){
						trTag.append($("<td>"));
						i++;
				}
				if(i == differentMonth+1){
					sumTag.text(numberWithCommas(trsum));
					i = 0;
				}
				trTag = $("<tr>").append(
					$("<td>").addClass("text-center").attr("colspan",4).text("소계")
					,$("<td>").text(numberWithCommas(trsumsum))
				);
				for(let x = 0; x < differentMonth; x++){
					trTag.append($("<td>").text(numberWithCommas(sum[i])));
					sum[i] = 0;
				}
				trTags.push(trTag);
			
			
				trTag = $("<tr>").append(
					$("<td>").addClass("text-center").attr("colspan",4).text("누계")
					,$("<td>").text(numberWithCommas(total))
				);
				for(let x = 0; x < differentMonth; x++){
					trTag.append($("<td>").text(numberWithCommas(sumsum[i])));
				}
				trTags.push(trTag);
			
			
		}
// 		if(fixList.length>0){
// 			var accountChange = $(fixList)eq(0).account_name;
// 			console.log(accountChange);
// 			var fixChange = fixList[0].fixassets_no;
// 			let trTag = $("<tr>").append({
// 				$("<td>").text(fixList[0].account_name)
// 				,$("<td>").text(fixList[0].fixassets_no)
// 				,$("<td>").text(fixList[0].assets_name)
// 				,$("<td>").text(fixList[0].status)
// 				,sumTag = $("<td>")
// 			});
// 			let j = 0;
// 			let trsum = 0;
// 			let trsumsum = 0;
// 			$.each(fixList, function(idx, fix){
// 				if(fixChange == fix.fixassets_no){
// 					while(fix.amor_date!=thead[5+j++]){
// 						tdTag = $("<td>");
// 						trTag.append(tdTag);
// 					}
// 					if(j == differentMonth) j = 0;
// 					trTag.append($("<td>").text(fix.amor_cost));
// 					trsum += fix.amor_cost;
// 					sum[j] += fix.amor_cost;
// 					sumsum[j] += fix.amor_cost;
// 				}else{
// 					sumTag.text(trsum);
// 					trsumsum += trsum;
// 					trsum = 0;
// 					fixChange = fix.fixassets_no;
// 					trTags.append(trTag);
// 					trTag = $("<tr>");
					
// 					if(accountChange!=fix.account_name){
// 						accountChange = fix.account_name;
// 						trTag.append({
// 							$("<td>").addClass("text-center").attr("colspan":"4").text(소계)
// 							,$("<td>").text(trsumsum)
// 						});
// 						for(let i = 0; i < sum.length; i++){
// 							trTag.append($("<td>").text(sum[i]));
// 							sum[i] = 0;
// 						}
// 						trsumsum = 0;
// 					}else{
// 						trTag = $("<tr>").append({
// 							$("<td>").text(fix.account_name)
// 							,$("<td>").text(fix.fixassets_no)
// 							,$("<td>").text(fix.assets_name)
// 							,$("<td>").text(fix.status)
// 							,sumTag = $("<td>")
// 						});
						
// 						while(fix.amor_date!=thead[5+j++]){
// 							tdTag = $("<td>");
// 							trTag.append(tdTag);
// 						}
// 						if(j == differentMonth) j = 0;
// 						trTag.append($("<td>").text(fix.amor_cost));
// 						trsum += fix.amor_cost;
// 						sum[j] += fix.amor_cost;
// 						sumsum[j] += fix.amor_cost;
// 					}
// 				}
// // 				for(let i = j; j < )
// // 				if(change != fix.account_name){
// // 					change = fix.account_name;
// // 					var tr = $("<tr>").append(
// // 							$("<td>").css("background-color","lightgray").addClass("text-center")
// // 							.css().attr("colspan", $(".basic").length-1).text("소계")
// // 							,$("<td>").text(sum)
// // 					);
// // 					sumsum += sum;
// // 					for(var i = 0; i < differentMonth; i++){
// // 						tr.append($("<td>").text(sum));
// // 						sumsum[i+1] += sum[i+1];
// // 					}
// // 					sum = [differentMonth+1];
// // 					trTags.push(tr);

// // 				}
// // 				trTag.append(
// // 							$("<td>").text(fix.account_name)
// // 							, $("<td>").text(fix.fixassets_no)
// // 							, $("<td>").text(fix.assets_name)
// // 							, $("<td>").text(fix.status)
// // 							, $("<td>").text(fix.total)
// // 						);
// // 				sum[0] += fix.total;
// // 				var j = 0;
// // 				for(var i = 0; i < differentMonth; i++){
// // 					var day = thead.find("th").not("basic")[i].text();
// // 					var fixMinusList = fix.fixMinusList;
// // 					var cost = 0;
// // 					if(fixMinusList!=null && fixMinusList.length > j){
// // 						if(day == fixMinusList[j].amor_date)
// // 							cost = fixMinusList[j++].amor_cost;
// // 					}				

// // 					trTag.append($("<td>").text(cost));
// // 					sum[i+1] += cost;
// // 				}
// // 				trTags.push(trTag);
// // 				if(idx == fixList.length-1){
// // 					var tr = $("<tr>").append(
// // 							$("<td>").css("background-color","lightgray")
// // 							.addClass("text-center").attr("colspan", $(".basic").length-1).text("소계")
// // 							,$("<td>").text(sum[0])
// // 					);
// // 					sumsum[0] += sum[0];
// // 					for(var i = 0; i < differentMonth; i++){
// // 						tr.append($("<td>").text(sum[i+1]));
// // 						sumsum[i+1] += sum[i+1];
// // 					}
// // 					sum = [differentMonth+1];
// // 					trTags.push(tr);

// 				}
// 			});
// 			var tr = $("<tr>").append(
// 					$("<td>").css("background-color","lightgray")
// 					.addClass("text-center").attr("colspan", $(".basic").length-1).text("누계")
// 					,$("<td>").text(sumsum[0])
// 			);
// 			for(var i = 0; i < differentMonth; i++){
// 				tr.append($("<td>").text(sumsum[i+1]));
// 			}
// 			trTags.push(tr);
// 		}else{
// 			trTags.push($("<tr>").html($("<td colspan='6'>").text("조건에 맞는 고정자산이 없습니다.")));
// 		}
		listBody.html(trTags);
		listBody.data("currentpage", resp.currentPage);
		searchForm.find("[name='page']").val("");
	}
}).submit();

for(var i = ${fixDate.startyear}; i <= ${fixDate.endyear}; i++){
	$("#syear").append($("<option>").text(i).val(i));
	$("#eyear").append($("<option>").text(i).val(i));
}
for(var i=1;i<13;i++){
	$("#smonth").append($("<option>").text(i).val(i));
	$("#emonth").append($("<option>").text(i).val(i));
}
var startmonth = ${fixDate.startmonth};
var endmonth = ${fixDate.endmonth};
var startyear = ${fixDate.startyear};
var endyear = ${fixDate.endyear};
$("#syear").on("change", function(){
	var sval = $(this).val();
	var eyear = $("#eyear");
	var optionlist = $("#smonth").find("option");
	if(sval==startyear&&sval!=endyear){
		$.each(optionlist, function(idx, option){
			if(option.value < startmonth){
				$(option).hide();
			}else $(option).show();
		});
		if($("#smonth").val()<startmonth) $("#smonth").val(startmonth);
	}else if(sval==startyear&&sval==endyear){
		$.each(optionlist, function(idx, option){
			if(startmonth > option.value || option.value>endmonth){
				$(option).hide();
			}else $(option).show();
		});
		if($("#smonth").val()<startmonth) $("#smonth").val(startmonth);
		else if($("#smonth").val()>endmonth) $("#smonth").val(endmonth);
	}else if(sval==endyear){
		$.each(optionlist, function(idx, option){
			if(option.value>endmonth){
				$(option).hide();
			}else $(option).show();
		});
		if($("#smonth").val()>endmonth) $("#smonth").val(endmonth);
	}else{
		$.each(optionlist, function(idx, option){
			$(option).show();
		})
	}
	$.each(eyear.find("option"), function(idx, option){
		if(option.value < sval){
			$(option).hide();
		}else $(option).show();
	})
	if(eyear.val()<sval) eyear.val(sval);
	if(eyear.val()==sval) monthconnect();
	$("#eyear").change();
});
$("#eyear").on("change", function(){
	var eval = $(this).val(); 
	var eoptionlist = $("#emonth").find("option");
	if(eval==startyear&&eval!=endyear){
		$.each(eoptionlist, function(idx, option){
			if(option.value < startmonth){
				$(option).hide();
			}else $(option).show();
		});
		if($("#emonth").val()<startmonth) $("#emonth").val(startmonth);
	}else if(eval==startyear&&eval==endyear){
		$.each(eoptionlist, function(idx, option){
			if(option.value < startmonth|| option.value>endmonth){
				$(option).hide();
			}else $(option).show();
		});
		if($("#emonth").val()<startmonth) $("#emonth").val(startmonth);
		else if($("#emonth").val()>endmonth) $("#emonth").val(endmonth);
	}else if(eval==endyear){
		$.each(eoptionlist, function(idx, option){
			if(option.value>endmonth){
				$(option).hide();
			}else $(option).show();
		});
		if($("#emonth").val()>endmonth) $("#emonth").val(endmonth);
	}else{
		$.each(eoptionlist, function(idx, option){
			$(option).show();
		})
	}
	if($("#eyear").val()==$("#syear").val()) monthconnect();
});
$("#smonth").on("change", function(){
	if($("#syear").val()==$("#eyear").val()) monthconnect();
	$("#eyear").change();
});
function monthconnect(){
	var month = $("#smonth").val();
	var max = $("#eyear").val() == endyear ? endmonth : 12;
	$.each($("#emonth").find("option"), function(idx,option){
		if(option.value<month || option.value > max){
			$(option).hide();
		}else $(option).show();
	});
	if($("#emonth").val()<month) $("#emonth").val(month);
}
$("#syear").change();
$("#eyear").change();
function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + '원';
}
</script>